akka {
  loglevel = "DEBUG"
}

mySpecialConfig {
  akka {
    loglevel = "INFO"
  }
}

specialTimedAssertionsConfig {
  akka.test.single-expect-default = 0.3s
}

interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
    test {
      filter-leeway = 5s
    }
  }
}

# routers demo

routersDemo {
  akka {
    actor.deployment {
      /poolParent2 {
        router = round-robin-pool
        nr-of-instances = 5
      }
      /groupParent2 {
        router = round-robin-group
        routees.paths = ["/user/child0", "/user/child1", "/user/child2", "/user/child3", "/user/child4"]
      }
    }
  }
}

# mailbox demo



mailboxDemo {
  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }
  support-ticket-dispatcher {
    mailbox-type = "akkaessentials.infrastructure.Mailboxes$SupportTicketPriorityMailbox"
  }
  akka.actor.deployment {
    /controlAwareActor2 {
      mailbox = control-mailbox
    }
  }
}



dispatchersDemo {
  my-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 1
    }
    throughput = 30
  }
  akka.actor.deployment {
    /rtjvm {
      dispatcher = my-dispatcher
    }
  }
}